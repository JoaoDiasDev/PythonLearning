Defined Lists
Lists in Python are defined using square brackets, and the elements stored in a list are separated by commas: list = ["This", "is", "a", "list"]. You can use the len() function to return the number of elements in a list. That is, len(list) returns 4. You can also use the in keyword to check if the list contains certain elements. If the element exists, it returns a true boolean. If the  element is not in the list, it returns false. For example, "This" in list returns true in this example. Like strings, a list can also use indexing to access specific elements of the list based on their location. You can access the first element of the list by performing list[0]. You can then access the string "This".

In Python, lists and strings are very similar. Both are examples of data sequences. Sequences have similar properties, such as (1) iterating through using a for loop, (2) supporting indexing, (3) finding the length of the sequence using the len function, (4) concatenating using the plus operator +, (5) using the in keyword to check if a sequence contains a value, and so on. Once you understand these concepts, you can apply them to other sequence types as well.
