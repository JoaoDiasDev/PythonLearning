String formatting
You can use the format method on strings to concatenate and format strings in all sorts of powerful ways. To do this, create a string that contains the brace {} as the placeholder to replace. Then use .format() to call the format method on the string and pass the variable as a parameter. The variable passed to the method is then used to replace the brace placeholder. This method automatically handles all conversions between data types. 

If the braces are empty, they are populated with variables passed in the order in which they were passed. However, you can enclose certain expressions in braces to perform more powerful string formatting operations. You can put the variable name in braces and then use the name in the parameter. This makes the code easier to read and adds flexibility to the order of variables.

You can also change how a string is formatted by putting a formatting expression inside the braces. For example, the formatting expression {:.2f} means to format a floating-point number that contains two decimal places. The colon acts as a delimiter in the field name if you specify a field name. You can also use the greater than operator (>) to specify text alignment. For example, the expression {:>3.2f} sorts the text three spaces to the right and specifies a floating-point number two digits after the decimal point. String formatting can be very useful for outputting easy-to-read text output.
