Tuple
As mentioned earlier, both strings and lists are examples of sequences. A string is a series of characters and cannot be changed. A list is a sequence of elements of any data type and is mutable. The third sequence type is a tuple. A tuple is like a list because it can contain elements of any data type. However, unlike lists, tuples cannot be changed. It is specified using parentheses instead of square brackets.

Considering how similar tuples are to lists, you might be wondering why tuples are important. Tuples can be useful when you need to make sure that an element is in a certain position and does not change. The list is mutable, so you can change the order of the elements. The order of the elements in the tuple cannot be changed, so the position of the elements in the tuple can have meaning. A good example of this is when the function returns multiple values. In this case, what is returned is a tuple, and the return value is an element of the tuple. The order of the returned values is important, and the tuples ensure that they are not out of order. Storing elements of a tuple in separate variables is called unpacking. This allows you to get multiple return values from a function and store each value in its own variable.

