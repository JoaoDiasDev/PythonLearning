For loop summary
You can use a for loop to iterate over a series of values. Let's take an example from the beginning of the video.

for x in range(5):

  print(x)

Similar to if statements and while loops, a for loop starts with the for keyword and has a colon at the end of the line. Like function definitions, while loops, and if statements, the body of a for loop starts on the next line and is indented to the right. But what happens to being between the for keyword and the colon? In this example, the range() function is used to create a series of numbers that the for loop can iterate. In this case, when the for loop repeats a sequence of numbers, the variable x points to the current element in the sequence. In Python and many programming languages, the range of numbers starts at 0 and the generated list of numbers is one less than the given value. Therefore, range(5) produces a sequence of numbers from 0 to 4 for a total of five numbers.

Putting all of this together, the range(5) function produces a sequence of numbers from 0 to 4. The for loop iterates over this sequence of numbers one at a time, making the numbers accessible through the variable x, and the code within the loop body executes for each iteration through the sequence. So for the first loop, x continues until it reaches 4, including 0, the next loop, 1, etc. At the end of the sequence, the loop terminates and the code continues.

The power of a for loop comes from the fact that it can iterate through all kinds of sequences of data, not just a range of numbers. You can use a for loop to iterate through a list of strings, such as a line or username in a file.

Not sure whether to use a for loop or a while loop? The while loop is useful for continuing to perform operations until the condition changes. The for loop works well when iterating over a series of elements.

